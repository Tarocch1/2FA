{"version":3,"sources":["utils/request.ts","constants/api.ts","services/keyService.ts","services/loginService.ts","stores/keyStore.ts","stores/loginStore.ts","stores/storeContext.ts","stores/useStore.ts","components/Loading/index.tsx","components/Login/index.tsx","components/List/index.tsx","components/Calc/index.tsx","App.tsx","index.tsx"],"names":["request","options","token","JSON","parse","window","localStorage","getItem","axios","defaults","headers","common","then","res","data","catch","error","message","erred","oauth_base","api","getKeys","method","baseURL","url","checkToken","getToken","code","redirect","location","origin","pathname","refreshToken","observable","action","a","async","keyService","keys","loading","jwt","loginService","logged","inited","removeItem","exp","Math","floor","Date","now","newJWT","setItem","stringify","params","URLSearchParams","search","replace","get","storeContext","React","createContext","keyStore","KeyStore","loginStore","LoginStore","useStore","useContext","Loading","style","height","type","justify","align","indicator","fontSize","spin","Login","icon","href","List","useState","setData","timeRemain","setRemain","useEffect","calc","cron","timer","setInterval","clearInterval","remain","authenticator","timeRemaining","newData","forEach","key","push","name","generate","useObserver","maxWidth","flexGrow","bordered","itemLayout","header","percent","format","dataSource","renderItem","item","Item","actions","onClick","text","copy","success","Meta","title","Calc","inputRef","useRef","setToken","current","input","value","marginBottom","span","ref","placeholder","onPressEnter","Text","copyable","App","showCalc","setShowCalc","initAuth","Header","padding","paddingRight","Title","color","level","Fragment","marginRight","logout","Content","overflowY","destroyOnClose","maskClosable","footer","visible","onCancel","ReactDOM","render","locale","zhCN","document","getElementById"],"mappings":"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","file":"static/js/main.4ea4f6b0.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\nimport { message } from 'antd';\n\nexport default function request(options: AxiosRequestConfig) {\n  const jwt = JSON.parse(window.localStorage.getItem('jwt') || '{}');\n  const token = jwt.token || '';\n  axios.defaults.headers.common['Token'] = token;\n  return axios(options)\n    .then(res => res.data)\n    .catch(error => {\n      message.error(error.message);\n      return {\n        erred: true,\n        error,\n      };\n    });\n}\n","export const oauth_base = 'https://oauth.api.tarocch1.com';\nexport const two_fa_base = 'https://2fa.api.tarocch1.com';\n\nexport const api = {\n  login: '/login',\n  token: '/token',\n  checkToken: '/token/check',\n\n  key: '/key',\n};\n","import request from '../utils/request';\nimport { two_fa_base, api } from '../constants/api';\n\nexport const getKeys = () => {\n  return request({\n    method: 'get',\n    baseURL: two_fa_base,\n    url: api.key,\n  });\n};\n","import request from '../utils/request';\nimport { oauth_base, api } from '../constants/api';\n\nexport const checkToken = () => {\n  return request({\n    method: 'get',\n    baseURL: oauth_base,\n    url: api.checkToken,\n  });\n};\n\nexport const getToken = (code: string) => {\n  return request({\n    method: 'post',\n    baseURL: oauth_base,\n    url: api.token,\n    data: {\n      code,\n      redirect: `${window.location.origin}${window.location.pathname}`,\n    },\n  });\n};\n\nexport const refreshToken = () => {\n  return request({\n    method: 'put',\n    baseURL: oauth_base,\n    url: api.token,\n  });\n};\n","import { observable, action } from 'mobx';\nimport { keyService } from '../services';\n\ninterface Key {\n  name: string;\n  key: string;\n}\n\nclass KeyStore {\n  @observable keys: Key[] = [];\n\n  @observable loading = true;\n\n  @action getKeys = async () => {\n    const keys = await keyService.getKeys();\n    this.keys = keys;\n    this.loading = false;\n  };\n}\n\nexport default new KeyStore();\n","import { observable, action } from 'mobx';\nimport { loginService } from '../services';\n\nclass LoginStore {\n  @observable logged = false;\n\n  @observable inited = false;\n\n  @action initAuth = async () => {\n    const jwt = JSON.parse(window.localStorage.getItem('jwt') || 'null');\n    if (jwt) {\n      const checkTokenRes = await loginService.checkToken();\n      if (checkTokenRes.erred) {\n        this.logged = false;\n        this.inited = true;\n        window.localStorage.removeItem('jwt');\n        return;\n      }\n      if (jwt.exp - Math.floor(Date.now() / 1000) <= 60 * 60 * 24) {\n        const newJWT = await loginService.refreshToken();\n        window.localStorage.setItem('jwt', JSON.stringify(newJWT));\n      }\n      this.logged = true;\n      this.inited = true;\n    } else {\n      const params = new URLSearchParams(window.location.search.replace(/^\\?/, ''));\n      const code = params.get('code');\n      if (code) {\n        const newJWT = await loginService.getToken(code);\n        window.localStorage.setItem('jwt', JSON.stringify(newJWT));\n        this.logged = true;\n        this.inited = true;\n      } else {\n        this.logged = false;\n        this.inited = true;\n      }\n    }\n  };\n\n  @action logout = () => {\n    window.localStorage.removeItem('jwt');\n    this.logged = false;\n  };\n}\n\nexport default new LoginStore();\n","import React from 'react';\nimport KeyStore from './keyStore';\nimport LoginStore from './loginStore';\n\nconst storeContext = React.createContext({\n  keyStore: KeyStore,\n  loginStore: LoginStore,\n});\n\nexport default storeContext;\n","import React from 'react';\nimport storeContext from './storeContext';\n\nconst useStore = () => React.useContext(storeContext);\n\nexport default useStore;\n","import React from 'react';\nimport { Row, Col, Spin, Icon } from 'antd';\n\nfunction Loading() {\n  return (\n    <Row style={{ height: '100%' }} type=\"flex\" justify=\"center\" align=\"middle\">\n      <Col>\n        <Spin indicator={<Icon style={{ fontSize: 24 }} type=\"loading\" spin />} />\n      </Col>\n    </Row>\n  );\n}\n\nexport default Loading;\n","import React from 'react';\nimport { Row, Col, Button } from 'antd';\nimport { oauth_base, api } from '../../constants/api';\n\nfunction Login() {\n  return (\n    <Row style={{ height: '100%' }} type=\"flex\" justify=\"center\" align=\"middle\">\n      <Col>\n        <Button\n          icon=\"aliyun\"\n          href={`${oauth_base}${api.login}?redirect=${window.location.origin}${window.location.pathname}`}\n        >\n          使用阿里云登录\n        </Button>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col, List as ListAntd, Progress, message } from 'antd';\nimport { useObserver } from 'mobx-react-lite';\nimport { authenticator } from 'otplib';\nimport copy from 'copy-to-clipboard';\nimport useStore from '../../stores/useStore';\n\ninterface DataItem {\n  name: string;\n  token: string;\n}\n\nfunction List() {\n  const { keyStore } = useStore();\n  const [data, setData] = useState<DataItem[]>([]);\n  const [timeRemain, setRemain] = useState(30);\n  useEffect(() => {\n    (async () => {\n      await keyStore.getKeys();\n      calc();\n    })();\n  }, []);\n  useEffect(() => {\n    cron();\n    const timer = window.setInterval(cron, 1000);\n    return () => {\n      window.clearInterval(timer);\n    };\n  }, []);\n  const cron = () => {\n    const remain = authenticator.timeRemaining();\n    setRemain(remain);\n    if (remain === 30) {\n      calc();\n    }\n  };\n  const calc = () => {\n    const newData: DataItem[] = [];\n    keyStore.keys.forEach(key => {\n      newData.push({\n        name: key.name,\n        token: authenticator.generate(key.key),\n      });\n    });\n    setData(newData);\n  };\n  const cp = (text: string) => {\n    copy(text);\n    message.success('复制成功');\n  };\n  return useObserver(() => (\n    <Row type=\"flex\" justify=\"center\">\n      <Col style={{ maxWidth: 1000, flexGrow: 1 }}>\n        <ListAntd\n          bordered\n          itemLayout=\"horizontal\"\n          loading={keyStore.loading}\n          header={<Progress percent={((30 - timeRemain) * 100) / 30} format={() => `${timeRemain}秒`} />}\n          dataSource={data}\n          renderItem={item => (\n            <ListAntd.Item\n              actions={[\n                <a key=\"copy\" onClick={() => cp(item.token)}>\n                  复制\n                </a>,\n              ]}\n            >\n              <ListAntd.Item.Meta title={item.name} />\n              <div>{item.token}</div>\n            </ListAntd.Item>\n          )}\n        />\n      </Col>\n    </Row>\n  ));\n}\n\nexport default List;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Row, Col, Input, Progress, Typography } from 'antd';\nimport { authenticator } from 'otplib';\n\nfunction Calc() {\n  const inputRef = useRef<Input>(null);\n  const [timeRemain, setRemain] = useState(30);\n  const [token, setToken] = useState('000000');\n  let timer = 0;\n  useEffect(() => {\n    return () => {\n      window.clearInterval(timer);\n    };\n  }, []);\n  const onPressEnterHandle = () => {\n    window.clearInterval(timer);\n    calc();\n    cron();\n    timer = window.setInterval(cron, 1000);\n  };\n  const cron = () => {\n    const remain = authenticator.timeRemaining();\n    setRemain(remain);\n    if (remain === 30) {\n      calc();\n    }\n  };\n  const calc = () => {\n    setToken(authenticator.generate(inputRef.current!.input.value));\n  };\n  return (\n    <Row type=\"flex\" justify=\"center\">\n      <Col style={{ marginBottom: 8 }} span={24}>\n        <Input ref={inputRef} placeholder=\"key\" onPressEnter={onPressEnterHandle} />\n      </Col>\n      <Col style={{ marginBottom: 8 }} span={24}>\n        <Progress percent={((30 - timeRemain) * 100) / 30} format={() => `${timeRemain}秒`} />\n      </Col>\n      <Col>{!!token && <Typography.Text copyable>{token}</Typography.Text>}</Col>\n    </Row>\n  );\n}\n\nexport default Calc;\n","import React, { useState, useEffect } from 'react';\nimport { Layout, Row, Col, Typography, Button, Modal } from 'antd';\nimport { useObserver } from 'mobx-react-lite';\nimport useStore from './stores/useStore';\nimport Loading from './components/Loading';\nimport Login from './components/Login';\nimport List from './components/List';\nimport Calc from './components/Calc';\n\nfunction App() {\n  const { loginStore } = useStore();\n  const [showCalc, setShowCalc] = useState(false);\n  useEffect(() => {\n    loginStore.initAuth();\n  }, []);\n  return useObserver(() => (\n    <Layout>\n      <Layout.Header style={{ padding: '0 16px' }}>\n        <Row style={{ height: '100%' }} type=\"flex\" justify=\"center\" align=\"middle\">\n          <Col style={{ maxWidth: 1000, flexGrow: 1, paddingRight: 10 }}>\n            <Row type=\"flex\" justify=\"space-between\" align=\"middle\">\n              <Col>\n                <Typography.Title style={{ color: '#fff', marginBottom: 0 }} level={4}>\n                  2FA认证工具\n                </Typography.Title>\n              </Col>\n              <Col>\n                {loginStore.inited && loginStore.logged && (\n                  <React.Fragment>\n                    <Button style={{ marginRight: 8 }} type=\"primary\" onClick={() => setShowCalc(true)}>\n                      计算器\n                    </Button>\n                    <Button type=\"danger\" onClick={loginStore.logout}>\n                      退出\n                    </Button>\n                  </React.Fragment>\n                )}\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Layout.Header>\n      <Layout.Content style={{ height: 'calc(100vh - 64px)', padding: 16, overflowY: 'scroll' }}>\n        {!loginStore.inited && <Loading />}\n        {loginStore.inited && !loginStore.logged && <Login />}\n        {loginStore.inited && loginStore.logged && <List />}\n      </Layout.Content>\n      <Modal\n        destroyOnClose\n        maskClosable={false}\n        title=\"计算器\"\n        footer={null}\n        visible={showCalc}\n        onCancel={() => setShowCalc(false)}\n      >\n        <Calc />\n      </Modal>\n    </Layout>\n  ));\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <ConfigProvider locale={zhCN}>\n    <App />\n  </ConfigProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}